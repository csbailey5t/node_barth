// Generated by CoffeeScript 1.9.3
(function() {
  var baseUrl, cheerio, fs, request, url;

  request = require('request');

  cheerio = require('cheerio');

  fs = require('fs');

  require('dotenv').load();

  url = process.env.URL;

  baseUrl = process.env.BASEURL;

  request(url, function(err, response, body) {
    var $, j, len, link, links, results, volumeLinks;
    if (err) {
      console.log("Couldn't get page: " + err);
    }
    $ = cheerio.load(body);
    links = $('a');
    volumeLinks = [];
    $(links.each(function(i, link) {
      if ($(link).text() === 'Table of Contents') {
        return volumeLinks.push(baseUrl + $(link).attr('href'));
      }
    }));
    volumeLinks = volumeLinks.slice(0, -2);
    results = [];
    for (j = 0, len = volumeLinks.length; j < len; j++) {
      link = volumeLinks[j];
      results.push(request(link, function(err, response, body) {
        var k, len1, paragraphLinks, results1, textLink, viewTextLinks;
        if (err) {
          console.log("Couldn't get page: " + err);
        }
        $ = cheerio.load(body);
        paragraphLinks = $('a');
        viewTextLinks = [];
        $(paragraphLinks.each(function(i, viewLink) {
          if ($(viewLink).text() === 'View Text') {
            return viewTextLinks.push(baseUrl + $(viewLink).attr('href'));
          }
        }));
        results1 = [];
        for (k = 0, len1 = viewTextLinks.length; k < len1; k++) {
          textLink = viewTextLinks[k];
          results1.push(request(textLink, function(err, response, body) {
            var dirname, filename, head, pageText, title;
            if (err) {
              console.log(err);
            }
            $ = cheerio.load(body);
            pageText = $('body').text();
            head = $('body').find('.head');
            title = head.text();
            dirname = 'paragraphs/';
            filename = dirname + title.toLowerCase().replace(/ /g, '_') + '.txt';
            return fs.writeFile(filename, pageText, function(err, data) {
              if (err) {
                console.log(err);
              }
              return console.log(data);
            });
          }));
        }
        return results1;
      }));
    }
    return results;
  });

}).call(this);
